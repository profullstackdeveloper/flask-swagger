# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class V1ProcessInsights(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, business_owners: List[str]=None, internal_users_count: int=None, external_users_count: int=None, external_domains_count: int=None, last_extraction: datetime=None, last_activity: datetime=None):  # noqa: E501
        """V1ProcessInsights - a model defined in Swagger

        :param business_owners: The business_owners of this V1ProcessInsights.  # noqa: E501
        :type business_owners: List[str]
        :param internal_users_count: The internal_users_count of this V1ProcessInsights.  # noqa: E501
        :type internal_users_count: int
        :param external_users_count: The external_users_count of this V1ProcessInsights.  # noqa: E501
        :type external_users_count: int
        :param external_domains_count: The external_domains_count of this V1ProcessInsights.  # noqa: E501
        :type external_domains_count: int
        :param last_extraction: The last_extraction of this V1ProcessInsights.  # noqa: E501
        :type last_extraction: datetime
        :param last_activity: The last_activity of this V1ProcessInsights.  # noqa: E501
        :type last_activity: datetime
        """
        self.swagger_types = {
            'business_owners': List[str],
            'internal_users_count': int,
            'external_users_count': int,
            'external_domains_count': int,
            'last_extraction': datetime,
            'last_activity': datetime
        }

        self.attribute_map = {
            'business_owners': 'businessOwners',
            'internal_users_count': 'internalUsersCount',
            'external_users_count': 'externalUsersCount',
            'external_domains_count': 'externalDomainsCount',
            'last_extraction': 'lastExtraction',
            'last_activity': 'lastActivity'
        }
        self._business_owners = business_owners
        self._internal_users_count = internal_users_count
        self._external_users_count = external_users_count
        self._external_domains_count = external_domains_count
        self._last_extraction = last_extraction
        self._last_activity = last_activity

    @classmethod
    def from_dict(cls, dikt) -> 'V1ProcessInsights':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The v1ProcessInsights of this V1ProcessInsights.  # noqa: E501
        :rtype: V1ProcessInsights
        """
        return util.deserialize_model(dikt, cls)

    @property
    def business_owners(self) -> List[str]:
        """Gets the business_owners of this V1ProcessInsights.


        :return: The business_owners of this V1ProcessInsights.
        :rtype: List[str]
        """
        return self._business_owners

    @business_owners.setter
    def business_owners(self, business_owners: List[str]):
        """Sets the business_owners of this V1ProcessInsights.


        :param business_owners: The business_owners of this V1ProcessInsights.
        :type business_owners: List[str]
        """

        self._business_owners = business_owners

    @property
    def internal_users_count(self) -> int:
        """Gets the internal_users_count of this V1ProcessInsights.


        :return: The internal_users_count of this V1ProcessInsights.
        :rtype: int
        """
        return self._internal_users_count

    @internal_users_count.setter
    def internal_users_count(self, internal_users_count: int):
        """Sets the internal_users_count of this V1ProcessInsights.


        :param internal_users_count: The internal_users_count of this V1ProcessInsights.
        :type internal_users_count: int
        """

        self._internal_users_count = internal_users_count

    @property
    def external_users_count(self) -> int:
        """Gets the external_users_count of this V1ProcessInsights.


        :return: The external_users_count of this V1ProcessInsights.
        :rtype: int
        """
        return self._external_users_count

    @external_users_count.setter
    def external_users_count(self, external_users_count: int):
        """Sets the external_users_count of this V1ProcessInsights.


        :param external_users_count: The external_users_count of this V1ProcessInsights.
        :type external_users_count: int
        """

        self._external_users_count = external_users_count

    @property
    def external_domains_count(self) -> int:
        """Gets the external_domains_count of this V1ProcessInsights.


        :return: The external_domains_count of this V1ProcessInsights.
        :rtype: int
        """
        return self._external_domains_count

    @external_domains_count.setter
    def external_domains_count(self, external_domains_count: int):
        """Sets the external_domains_count of this V1ProcessInsights.


        :param external_domains_count: The external_domains_count of this V1ProcessInsights.
        :type external_domains_count: int
        """

        self._external_domains_count = external_domains_count

    @property
    def last_extraction(self) -> datetime:
        """Gets the last_extraction of this V1ProcessInsights.


        :return: The last_extraction of this V1ProcessInsights.
        :rtype: datetime
        """
        return self._last_extraction

    @last_extraction.setter
    def last_extraction(self, last_extraction: datetime):
        """Sets the last_extraction of this V1ProcessInsights.


        :param last_extraction: The last_extraction of this V1ProcessInsights.
        :type last_extraction: datetime
        """

        self._last_extraction = last_extraction

    @property
    def last_activity(self) -> datetime:
        """Gets the last_activity of this V1ProcessInsights.


        :return: The last_activity of this V1ProcessInsights.
        :rtype: datetime
        """
        return self._last_activity

    @last_activity.setter
    def last_activity(self, last_activity: datetime):
        """Sets the last_activity of this V1ProcessInsights.


        :param last_activity: The last_activity of this V1ProcessInsights.
        :type last_activity: datetime
        """

        self._last_activity = last_activity
