# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.v1_process_anchors import V1ProcessAnchors  # noqa: F401,E501
from swagger_server import util


class V1ProcessMetadata(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: str=None, name: str=None, description: str=None, icon_url: str=None, anchors: V1ProcessAnchors=None):  # noqa: E501
        """V1ProcessMetadata - a model defined in Swagger

        :param id: The id of this V1ProcessMetadata.  # noqa: E501
        :type id: str
        :param name: The name of this V1ProcessMetadata.  # noqa: E501
        :type name: str
        :param description: The description of this V1ProcessMetadata.  # noqa: E501
        :type description: str
        :param icon_url: The icon_url of this V1ProcessMetadata.  # noqa: E501
        :type icon_url: str
        :param anchors: The anchors of this V1ProcessMetadata.  # noqa: E501
        :type anchors: V1ProcessAnchors
        """
        self.swagger_types = {
            'id': str,
            'name': str,
            'description': str,
            'icon_url': str,
            'anchors': V1ProcessAnchors
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'description': 'description',
            'icon_url': 'iconUrl',
            'anchors': 'anchors'
        }
        self._id = id
        self._name = name
        self._description = description
        self._icon_url = icon_url
        self._anchors = anchors

    @classmethod
    def from_dict(cls, dikt) -> 'V1ProcessMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The v1ProcessMetadata of this V1ProcessMetadata.  # noqa: E501
        :rtype: V1ProcessMetadata
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this V1ProcessMetadata.


        :return: The id of this V1ProcessMetadata.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this V1ProcessMetadata.


        :param id: The id of this V1ProcessMetadata.
        :type id: str
        """

        self._id = id

    @property
    def name(self) -> str:
        """Gets the name of this V1ProcessMetadata.


        :return: The name of this V1ProcessMetadata.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this V1ProcessMetadata.


        :param name: The name of this V1ProcessMetadata.
        :type name: str
        """

        self._name = name

    @property
    def description(self) -> str:
        """Gets the description of this V1ProcessMetadata.


        :return: The description of this V1ProcessMetadata.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this V1ProcessMetadata.


        :param description: The description of this V1ProcessMetadata.
        :type description: str
        """

        self._description = description

    @property
    def icon_url(self) -> str:
        """Gets the icon_url of this V1ProcessMetadata.


        :return: The icon_url of this V1ProcessMetadata.
        :rtype: str
        """
        return self._icon_url

    @icon_url.setter
    def icon_url(self, icon_url: str):
        """Sets the icon_url of this V1ProcessMetadata.


        :param icon_url: The icon_url of this V1ProcessMetadata.
        :type icon_url: str
        """

        self._icon_url = icon_url

    @property
    def anchors(self) -> V1ProcessAnchors:
        """Gets the anchors of this V1ProcessMetadata.


        :return: The anchors of this V1ProcessMetadata.
        :rtype: V1ProcessAnchors
        """
        return self._anchors

    @anchors.setter
    def anchors(self, anchors: V1ProcessAnchors):
        """Sets the anchors of this V1ProcessMetadata.


        :param anchors: The anchors of this V1ProcessMetadata.
        :type anchors: V1ProcessAnchors
        """

        self._anchors = anchors
